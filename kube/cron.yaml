apiVersion: batch/v1
kind: CronJob
metadata:
  name: vdv-pkpass-db-abo
  namespace: q-personal
  labels:
    app: vdv-pkpass
    part: db-abo
spec:
  schedule: "7 * * * *"
  jobTemplate:
    spec:
      template:
        metadata:
          annotations:
            cni.projectcalico.org/ipv6pools: "[\"default-ipv6-ippool\"]"
          labels:
            app: vdv-pkpass
            class: cron
            part: db-abo
        spec:
          restartPolicy: OnFailure
          volumes:
            - name: google-creds
              secret:
                secretName: vdv-pkpass-google-creds
          containers:
            - name: django
              image: theenbyperor/vdv-pkpass-django:(version)
              imagePullPolicy: Always
              command: ["sh", "-c", "python3 manage.py update-db-abo"]
              volumeMounts:
                - mountPath: "/google-creds"
                  name: google-creds
              envFrom:
                - configMapRef:
                    name: vdv-pkpass
                - secretRef:
                    name: vdv-pkpass-db-creds
                  prefix: "DB_"
                - secretRef:
                    name: vdv-pkpass-email
                  prefix: "EMAIL_"
                - secretRef:
                    name: vdv-pkpass-django-secret
                - secretRef:
                    name: vdv-pkpass-s3
                - secretRef:
                    name: vdv-pkpass-nr
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: vdv-pkpass-db-saarvv
  namespace: q-personal
  labels:
    app: vdv-pkpass
    part: db-saarvv
spec:
  schedule: "0 * * * *"
  jobTemplate:
    spec:
      template:
        metadata:
          annotations:
            cni.projectcalico.org/ipv6pools: "[\"default-ipv6-ippool\"]"
          labels:
            app: vdv-pkpass
            class: cron
            part: db-saarvv
        spec:
          restartPolicy: OnFailure
          volumes:
            - name: google-creds
              secret:
                secretName: vdv-pkpass-google-creds
          containers:
            - name: django
              image: theenbyperor/vdv-pkpass-django:(version)
              imagePullPolicy: Always
              command: ["sh", "-c", "python3 manage.py update-saarvv"]
              volumeMounts:
                - mountPath: "/google-creds"
                  name: google-creds
              envFrom:
                - configMapRef:
                    name: vdv-pkpass
                - secretRef:
                    name: vdv-pkpass-db-creds
                  prefix: "DB_"
                - secretRef:
                    name: vdv-pkpass-email
                  prefix: "EMAIL_"
                - secretRef:
                    name: vdv-pkpass-django-secret
                - secretRef:
                    name: vdv-pkpass-s3
                - secretRef:
                    name: vdv-pkpass-nr
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: vdv-pkpass-data-sync
  namespace: q-personal
  labels:
    app: vdv-pkpass
    part: data-sync
spec:
  schedule: "0 4 * * *"
  jobTemplate:
    spec:
      template:
        metadata:
          annotations:
            cni.projectcalico.org/ipv6pools: "[\"default-ipv6-ippool\"]"
          labels:
            app: vdv-pkpass
            class: cron
            part: data-sync
        spec:
          restartPolicy: OnFailure
          volumes:
            - name: google-creds
              secret:
                secretName: vdv-pkpass-google-creds
          containers:
            - name: uic-certs
              image: theenbyperor/vdv-pkpass-django:(version)
              imagePullPolicy: IfNotPresent
              command: ["sh", "-c", "python3 manage.py download-uic-certs"]
              volumeMounts: &volumeMounts
                - mountPath: "/google-creds"
                  name: google-creds
              envFrom: &envFrom
                - configMapRef:
                    name: vdv-pkpass
                - secretRef:
                    name: vdv-pkpass-db-creds
                  prefix: "DB_"
                - secretRef:
                    name: vdv-pkpass-email
                  prefix: "EMAIL_"
                - secretRef:
                    name: vdv-pkpass-django-secret
                - secretRef:
                    name: vdv-pkpass-s3
                - secretRef:
                    name: vdv-pkpass-nr
            - name: uic-data
              image: theenbyperor/vdv-pkpass-django:(version)
              imagePullPolicy: IfNotPresent
              command: ["sh", "-c", "python3 manage.py download-uic-data"]
              volumeMounts: *volumeMounts
              envFrom: *envFrom
#            - name: vdv-certs
#              image: theenbyperor/vdv-pkpass-django:(version)
#              imagePullPolicy: IfNotPresent
#              command: ["sh", "-c", "python3 manage.py download-vdv-certs"]
#              volumeMounts: *volumeMounts
#              envFrom: *envFrom
            - name: vdv-orgs
              image: theenbyperor/vdv-pkpass-django:(version)
              imagePullPolicy: IfNotPresent
              command: ["sh", "-c", "python3 manage.py download-vdv-orgs"]
              volumeMounts: *volumeMounts
              envFrom: *envFrom
            - name: rsp-data
              image: theenbyperor/vdv-pkpass-django:(version)
              imagePullPolicy: IfNotPresent
              command: ["sh", "-c", "python3 manage.py download-rsp-data"]
              volumeMounts: *volumeMounts
              envFrom: *envFrom
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: vdv-pkpass-db-abo
  namespace: q-personal
spec:
  podSelector:
    matchLabels:
      app: vdv-pkpass
      class: cron
  policyTypes:
    - Ingress